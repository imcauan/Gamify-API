generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           String           @id @default(uuid())
  email        String        @unique
  username     String        @unique
  password     String
  bio          String?
  avatarUrl    String?
  likes Likes[]
  posts        Posts[]
  communities  Communities[]
  commentaries Commentaries[]
  saves Saves[]
  messages Messages[]
  
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Posts {
  id           String            @id @default(uuid())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  caption     String?
  location    String?
  tags        String?
  author       Users          @relation(fields: [authorId], references: [id])
  authorId     String
  image String?
  commentaries Commentaries[]
  likes Likes[]
  saves Saves[]
  community Communities? @relation(fields: [communityId], references: [id])
  communityId String?
}

model Commentaries {
  id        String      @id @default(uuid())
  post    Posts  @relation(fields: [postId], references: [id])
  postId  String    
  user    Users  @relation(fields: [userId], references: [id])
  userId  String  
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Saves {
  id String @id @default(uuid())
  postId String
  post    Posts  @relation(fields: [postId], references: [id])
  user    Users  @relation(fields: [userId], references: [id])
  userId  String  
}
model Communities {
  id        String      @id @default(uuid())
  bio       String?
  name      String   @unique
  owner     Users    @relation(fields: [ownerId], references: [id])
  ownerId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts Posts[]
}

model Messages {
  id String @id @default(uuid())
  content String
  author Users @relation(fields: [authorId], references: [id])
  authorId String
  destination String
}

model Likes {
  id String @id @default(uuid())
  author Users @relation(fields: [authorId], references: [id])
  authorId String
  post Posts @relation(fields: [postId], references: [id])
  postId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}